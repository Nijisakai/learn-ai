
![20180823164259854](https://md.hass.live/20180823164259854.png)

> [!NOTE]
> 测试

<!--sec data-title="Introduction" data-id="intro" ces-->
This page is implemented using the two plugins developed by me: ```gitbook-plugin-mcqx``` and ```gitbook-plugin-sectionx```. You can use the two plugins separately, but they can also be integrated for more interactivity.

Please check the [Github repo](https://github.com/ymcatar/gitbook-plugin-mcqx) for the syntax, changelog of the plugin ```gitbook-plugin-mcqx```. Syntax too complicated? Use the code generator in the [plugin homepage](http://ymcatar.github.io/gitbook-plugin-mcqx/).

The source code for this page is available [here](https://raw.githubusercontent.com/ymcatar/gitbook-test/master/testing_mcqx.md) for your reference.
<!--endsec-->

<!--sec data-title="Example" data-id="q2" data-show=true ces-->

Question attempted will be disabled, however, you can open a new tab in Incognto Mode (Chrome), Private Window (Firefox), or clear your cookies if you want to try to answer this question again.

The ```random``` option is enabled for the question, you might find the order of the questions to be different when you refresh the page.

{%mcq ans="o4", random=true%}
{%title%}
Which of the following is not a planet in the Solar System?
{%o1%} Jupiter
{%o2%} Earth
{%o3%} Mars
{%o4%} Pluto
{%hint%} Poor Pluto ...
{%endmcq%}

The ```random``` option is disabled for the question.

{%mcq ans="o3"%}
{%title%} Just click option C to continue.
{%o1%} Don't click me. I'm A.
{%o2%} Don't click me. I'm B.
{%o3%} Click me.
{%o4%} Don't click me. I'm C.
{%hint%} It is so hard to come up with placeholder question ...
{%endmcq%}

You can use ```count``` to only displayed a certain number of options. You can try to see all the options by refreshing the page, or if you are smart, just take a look of the source code of this page.

{%mcq ans="o4", count=7%}
{%title%} Just find the number "42" and click it.
{%o1%} ```689```
{%o2%} 30626700^23
{%o3%} 30624770
{%o4%} 42
{%o5%} 1234
{%o6%} 99999
{%o7%} 1
{%o8%} -3
{%hint%} It is so hard to come up with placeholder question ...
{%endmcq%}

You can add a ```{%message%}``` sub-block. The message will be displayed only after the user has answered the question correctly, useful for outputing answer explanation.

{%mcq ans="o4", random=true%}
{%title%} Just find the number ```42``` and click it.
{%o1%} 31
{%o2%} 13
{%o3%} 689
{%o4%} 42
{%message%} This message is only visible to those who answered this question correctly ...
{%endmcq%}

<!--endsec-->

{%mcq ans="o1", count=2%}
{%title%} This is a question?
{%o1%} First option
{%o2%} Second option
{%o3%} Third option
{%o4%} Fourth option
{%o5%} Fourth option
{%o6%} Fourth option
{%o7%} Fourth option
{%o8%} Fourth option
{%endmcq%}

<!--sec data-title="Introduction" data-id="introabc" data-nopdf="true" ces-->
This page is implemented using the two plugins developed by me: ```gitbook-plugin-sectionx```, please check the [Github repo](https://github.com/ymcatar/gitbook-plugin-sectionx) for the plugin.

The source code for this page is available [here](https://raw.githubusercontent.com/ymcatar/gitbook-test/master/testing_sectionx.md).
<!--endsec-->

<!--sec data-title="Example 1" data-id="section1" ces-->
This is a section that is by default visible. You can toggle this with the button in the title. The next section is hidden by default, you can add a custom button to toggle it (see GitHub for the syntax).

<button class="section" target="section3" show="Show the next section" hide="Hide the next section"></button>
<!--endsec-->

<!--sec data-title="Example 2" data-id="section2" data-collapse=true ces-->
This is a section that is by default closed but visible (with ```data-collapse=true```)
<!--endsec-->

<!--sec data-title="Hidden 3" data-id="section3" data-show=false ces-->
This section can only be opened with that button.
<!--endsec-->

This is a spoiler: {%s%}Hello World.{%ends%}

{%youtube%}JIB3JbIIbPU{%endyoutube%}

```eval-python
print [x + 1 for x in range(10)]
```

```eval-python
import turtle

def hilbert2(step, rule, angle, depth, t):
   if depth > 0:
      a = lambda: hilbert2(step, "a", angle, depth - 1, t)
      b = lambda: hilbert2(step, "b", angle, depth - 1, t)
      left = lambda: t.left(angle)
      right = lambda: t.right(angle)
      forward = lambda: t.forward(step)
      if rule == "a":
        left(); b(); forward(); right(); a(); forward(); a(); right(); forward(); b(); left();
      if rule == "b":
        right(); a(); forward(); left(); b(); forward(); b(); left(); forward(); a(); right();
myTurtle = turtle.Turtle()
myTurtle.speed(0)
hilbert2(5, "a", 90, 5, myTurtle)
```

<center><iframe src="http://hass.live:9019" width="100%" height="1400" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></center>